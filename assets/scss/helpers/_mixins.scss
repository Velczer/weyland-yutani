@mixin box-sizing($box-model) {
  box-sizing: $box-model;
}

*,
*:after,
*:before {
  @include box-sizing(border-box);
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin bw() {
	filter: grayscale(100%);
}

@mixin transform($args) {
	transform: #{$args};
}

@mixin background-cover($url) {
  background: url($url) no-repeat center center;
  background-size: cover;
}

@mixin blur-text($amount: 3px, $color: rgba(0, 0, 0, 0.5)) {
	color: transparent;
	text-shadow: 0 0 $amount $color;
}

@mixin absolute ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}

@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin vertical-align {
	position: absolute;
	top: 50%;
	@include transform( translateY(-50%) );
}
@mixin horizontal-align {
	position: absolute;
	left: 50%;
	@include transform( translateX(-50%) );
}

@mixin ease($property:all, $speed:0.3s, $timing: $easeOutQuint) {
	transition: $property $speed $timing;
}

@mixin transition($args) {
	transition: #{$args};
}

@mixin screen-above($screen-size) {
  @media screen and (min-width: $screen-size) {
    @content;
  }
}

@mixin screen-below($screen-size) {
  @media screen and (max-width: ($screen-size - 1px)) {
    @content;
  }
}

@mixin screen-between($min-screen-size, $max-screen-size) {
  @media screen and (min-width: $min-screen-size) and (max-width: ($max-screen-size - 1px)) {
    @content;
  }
}

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin line-height($heightValue: 12 ){
    line-height: $heightValue + px; //fallback for old browsers
    line-height: (0.125 * $heightValue) + rem;
}

@mixin ratio($width:1, $height:1) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content, > .inside {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}
